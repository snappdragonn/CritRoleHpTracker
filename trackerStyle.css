#trackerBlock {
  --numPanels: 7;
  --numNotifs: 0;

  --defaultWidth: 150px;
  --defaultHeight: calc( var(--numPanels, 7) * 60px + 10px );
  --widthMod:  1;
  --heightMod: 1;

  position: absolute;
  z-index: 3000;
}

#trackerBlock[data-orientation="horizontal"] {
  --defaultWidth: calc( var(--numPanels, 7) * 140px + 42px );
  --defaultHeight: 58px;
}

#trackerBlock b {
  font-weight: bold;
}

#trackerBlock i {
  font-style: italic;
}

#trackerBody{
  width: calc(var(--defaultWidth, 150px) * var(--widthMod, 1));
  height: calc(var(--defaultHeight, 430px) * var(--heightMod, 1));
  min-width: 55px;
  min-height: calc( var(--numPanels, 7) * 22px + 16px );
  background-color: dimgray;
  border-style: solid;
  border-color: black;
  border-width: 2px;
  border-radius: 3px;
  color: white;
  font-size: 15px;
  display: flex;
  flex-direction: column;
  position: relative;
  z-index: 1000;
}

#trackerBlock[data-orientation="horizontal"] #trackerBody {
  min-height: 30px;
  min-width: calc( var(--numPanels, 7) * 52px + 16px );
}

#trackerBody:has(.spellInfoNotif) {
  height: calc(var(--defaultHeight, 430px) * var(--heightMod, 1) + var(--numNotifs)*22px + 6px);
}


#expandButton {
  position: absolute;
  right: 2px;
  top: 2px;
}

#contentGrid {
  width: 100%; 
  height: 100%; 
  font-size: calc( 16px * min(var(--heightMod, 1), var(--widthMod, 1)) );
  display: grid; 
  grid-template: calc( 22px * min(var(--heightMod, 1), var(--widthMod, 1)) ) 1fr / 1fr calc( 22px * min(var(--heightMod, 1), var(--widthMod, 1)) ); 
  grid-template-areas: 'title menuButton' 'content content';
}

#contentGrid:has(.spellInfoNotif) {
  grid-template-rows: calc( 22px * min(var(--heightMod, 1), var(--widthMod, 1)) ) auto 1fr; 
  grid-template-areas: 'title menuButton' 'notif notif' 'content content';
}

#trackerBlock[data-orientation="horizontal"] #contentGrid:has(.spellInfoNotif) {
  grid-template-rows: calc( 22px * min(var(--heightMod, 1), var(--widthMod, 1)) ) 1fr auto; 
  grid-template-areas: "content menuButton" "content title" "notif title";
}

#trackerBlock[data-orientation="horizontal"] #contentGrid {
  grid-template-areas: "content menuButton" "content title";
}


#trackerTitle {
  display: flex; 
  align-items: center;
  height: 100%;
  cursor: pointer;
  overflow: hidden;
  border: black solid;
  border-width: 0 2px 2px 0;
  box-sizing: border-box;
  font-size: calc( 16px * min(var(--heightMod, 1), var(--widthMod, 1)) );
}

#trackerBlock[data-orientation="horizontal"] #trackerTitle {
  writing-mode: vertical-rl;
  text-orientation: mixed;
  border-width: 2px 0 0 2px;
  display: block;
}

#trackerTitle h4 {
  padding: 0 0 0 calc( 4px * min(var(--heightMod, 1), var(--widthMod, 1)) );
  font-size: calc( 16px * min(var(--heightMod, 1), var(--widthMod, 1)) );
}

#trackerBlock[data-orientation="horizontal"] #trackerTitle h4 {
  padding: calc( 4px * min(var(--heightMod, 1), var(--widthMod, 1)) ) 0 0 calc( 2px * min(var(--heightMod, 1), var(--widthMod, 1)) );
}


#menuContainer {
  border: black solid;
  border-width: 0 0 2px 0;
}

#trackerBlock[data-orientation="horizontal"] #menuContainer {
  border-width: 0 0 0 2px;
}


.menuItem:hover {
  background-color: gray;
}

.menuItem {
  padding: 0 0 0 2px;
  border-color: #525252;
  border-style: solid;
  border-width: 1px 0 1px 0;
  box-sizing: border-box;
  padding: 0 2% 0 2%;
}

.menuDropDown {
  background-color: dimgray;
  /* color: #d5d3cc; */
  display: none;
  box-shadow: 0px 8px 16px 8px rgba(0,0,0,0.2);
  position: absolute;
  width: calc( 120px * min(var(--heightMod, 1), var(--widthMod, 1)) );
  cursor: default;
  right: 0;
  z-index: 1000;
  border-color: black;
  border-style: solid;
  border-width: 2px;
}

.menuDropDown h4 {
  font-weight: 100;
  font-size: calc( 16px * min(var(--heightMod, 1), var(--widthMod, 1)) );
  line-height: initial;
  white-space: nowrap;
}

#mainMenu {
  right: -2px;
  font-size: calc( 16px * min(var(--heightMod, 1), var(--widthMod, 1)) );
}

#mainMenu img {
  height: calc( 12px * min(var(--heightMod, 1), var(--widthMod, 1)) );
}

.submenu {
  position: relative;
  display: flex;
  align-items: center;
  gap: calc( 3px * min(var(--heightMod, 1), var(--widthMod, 1)) );
}

.radioButton {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

#expandButton {
  height: 24px;
  width: 24px;
  border: black solid 2px;
  border-radius: 3px;
  cursor: pointer;
  /*box-shadow: 0px 8px 16px 8px rgba(0,0,0,0.15); TODO add only when tracker is minimised*/
}

.button {
  /*border: black solid;
  border-width: 0 0 0 1px*/
  background-color: dimgray;
  box-sizing: border-box;
  display: flex;
  align-items: center;
  justify-content: center;
}

.button:hover {
  background-color: gray;
}

.button:hover img{
  height: 90% !important;
}

.submenu:hover .menuDropDown {
  display: block !important;
}

.submenuDropdown{
  right: calc( 110px * min(var(--heightMod, 1), var(--widthMod, 1)) );
  top: 0;
}

#trackerTable {
  width: 100%;
  height: 90%;
  border-top: 2px solid black;
}

#notifContainer {
  display: flex;
  align-items: center;
  justify-content: center;
  grid-area: notif;
  flex-direction: column;
  border-bottom: solid black 2px;
  padding-bottom: 1px;
}

#trackerBlock[data-orientation="horizontal"] #notifContainer {
  border-bottom: none;
  border-top: solid black 2px;
}

.spellInfoNotif {
  width: 98%;
  height: 1.4em;
  position: relative;
  background-color: #505050;
  border: black solid 1px;
  border-radius: 3px;
  color: rgb(227 227 227);
  display: flex;
  justify-content: space-between;
  align-items: center;
  cursor: pointer;
  margin: 0.1em 0;
  font-size: calc( 16px * min(var(--heightMod, 1), var(--widthMod, 1)) );
}

.spellInfoNotif > span {
  margin-left: 0.15em;
  white-space: nowrap;
  overflow: hidden;
  width: 85%;
  text-overflow: ellipsis;
/*  color: #ededed;*/
}

/*.spellInfoNotif > span:hover {
  color: white;
  transform: scale(1.02);
}*/

.closeButton {
  height: 1.3em;
  width: 1.3em;
  font-size: 1em;
  float: right;
  background-size: cover;
  border: none;
  background-color: #505050;
  margin-right: 0.15em;
}

.closeButton:hover {
  height: 1.4em;
  width: 1.4em;
  background-color: #5c5c5c;
}

.spellInfo{
  display: none;
  position: absolute;
  z-index: 1;
  width: 20em;
  top: 0;
  right: 103%;
  box-sizing: border-box;
  background-color: dimgray;
  border: 2px solid black;
  border-radius: 3px;
  color: #c5c3bc;
}

#trackerBlock[data-orientation="horizontal"] .spellInfo {
  width: 100%;
  top: 130%;
  right: -3px;
}

.spellInfo{
  color: rgb(209 209 209);
}

.spellStatItem {
  border: solid black 1px;
  flex-grow: 1;
  text-align: center;
}

.spellStatItem div:last-child {
  font-size: calc(1em - 2px);
}

.spellStatItem div:first-child {
  font-weight: bold;
  font-size: calc(1em + 2px);
}

.spellStats {
  margin: 0.25em;
  display: flex;
  flex-wrap: wrap;
  border: solid black 1px;
}

.spellDesc {
  margin: 0.25em;
  white-space: pre-line;
  overflow-y: auto;
  max-height: 30em;
}

.spellDesc::-webkit-scrollbar {
    width: 0.7em;
    margin-left: 2px;

}

.spellDesc::-webkit-scrollbar-track {
    background-color: #585858;
    /*border-radius: 10px;*/
    background-clip: content-box;
    border: solid transparent;
    border-width: 0 0 0 2px;
}

.spellDesc::-webkit-scrollbar-thumb {
    background-color: #464646;
    /*border-radius: 10px;*/
    background-clip: content-box;
    border: solid transparent;
    border-width: 0 0 0 2px;
}

.spellInfoNotif .spellName {
  background-color: #505050;
  border-bottom: black solid 1px;
  padding-left: 0.25em;
  font-weight: bold;
}

#hpPanelsContainer {
  width: 98%;
  height: 98%;
  color: #b1ac9e; /*#9e9a8d;*/
  min-height: 0px;
  display: flex;
  flex-direction: column;
  justify-content: space-evenly;
  align-items: center;
  flex-grow: 1;
  /*border: black solid;
  border-width: 2px 0 0 0;
  box-sizing: border-box;*/
  place-self: center;
}

#trackerBlock[data-orientation="horizontal"] #hpPanelsContainer {
  flex-direction: row;
}

.panelContainer {
  flex: 1 1 50px;
  width: 100%;
  height: 100%;
  min-height: 0;
  display: flex;
  align-items: center;
  justify-content: center;
  position: relative;
}

.playerPanel {
  box-sizing: border-box;
  border-color: white;
  border-width: 1px;
  width: 95%;
  height: 90%;
  background-color: steelblue;
  border-radius: 4px;
  border-style: solid;
  align-items: center;
  display: flex;
  justify-content: space-evenly;
  cursor: default;
}

.panelContainer.initiative .playerPanel{
  border-color: darkgray;
}
.panelContainer.initiativeCurrent .playerPanel{
  border-color: white;
  border-width: 2px;
}

.enemyTurnMarker {
  width: 95%;
  height: 3px;
  background-color: white;
}

#trackerBlock[data-orientation="horizontal"] .enemyTurnMarker {
  width: 3px;
  height: 95%;
}

.headshotImg {
  border-radius: 50%;
  height: 90%;
}

.playerImage {
  height: min(calc(41px * var(--heightMod, 1)), calc(41px * var(--widthMod, 1)));
  text-align: center;
}

.headshotOverlay {
  height: 100%; 
  width: 100%; 
  position: absolute; 
  left: 0; 
  border-radius: 50%;
  display: none;
  opacity: 70%;
}

.playerName {
  position: relative;
  top: -40%;
  cursor: default;
  font-size: min(calc(15px * var(--heightMod, 1)), calc(15px * var(--widthMod, 1)));
}

.hpNumber h1 {
  font-size: min(calc(41px * var(--heightMod, 1)), calc(41px * var(--widthMod, 1)));
}

.hpNumber:has(> .tmpHp[data-visibility="visible"]) h1 {
  font-size: min(calc(38px * var(--heightMod, 1)), calc(38px * var(--widthMod, 1)));
  line-height: min(calc(32px * var(--heightMod, 1)), calc(32px * var(--widthMod, 1)));
}

.hpNumber .tmpHp {
  font-size: min(calc(12px * var(--heightMod, 1)), calc(12px * var(--widthMod, 1)));
  display: block;
}

.hpNumber .tmpHp[data-visibility="hidden"]{
  display: none;
}

.healthBar {
  flex: 1; 
  height: 45%; 
  width: 100%; 
  position: relative;    
  border-radius: 3px; 
  overflow: hidden;
}

.healthBar .barBackground {
  background-color: #723939; 
  width: 100%; 
  height: 100%; 
  position: absolute; 
  top: 0; 
  left: 0; 
  border-radius: 3px;
  border: 1px solid #9e9a8d;
  box-sizing: border-box;
}

.slider {
  height: 100%; 
  position: absolute; 
  top: 0; /* -1px because border takes up 1px */
  left: 0;
  border: 1px solid rgb(158, 154, 141);
  border-radius: 3px;
  box-sizing: border-box;
}

.hpSlider {
  background-color: rgb(54 82 54);
}

.tmpHpSlider[style*="width: 0%;"] {
    border: none;   
}

.playerPanel .barPlayerName {
  font-size: min(calc(16px * var(--heightMod, 1)), calc(16px * var(--widthMod, 1)));
}

.playerPanel .barPanelHeader {
  display: flex;
  align-items: center;
}

.playerPanel .healthbarHpNum {
  font-weight: 500;
  position: absolute;
  margin-left: calc( 2px * min(var(--heightMod, 1), var(--widthMod, 1)) );
  font-size: calc( 15px * min(var(--heightMod, 1), var(--widthMod, 1)) );
  display: flex;
  align-items: center;
  height: 100%;
}

.playerPanel .barDeathSaveGrid {
  display: grid; 
  height: 80%; 
  width: 90%; 
  grid-template: 50% 50% / repeat(3, 1fr) 5% repeat(3, 1fr);
  grid-template-areas:
      "header header header header header header header"
      "succ1 succ2 succ3 . fail1 fail2 fail3";
  row-gap: calc( 3px * min(var(--heightMod, 1), var(--widthMod, 1)) );
}


.chracterStatsPanel {
  width: calc( 230px * min(var(--heightMod, 1), var(--widthMod, 1)) );
  font-size: calc( 15px * min(var(--heightMod, 1), var(--widthMod, 1)) );
  z-index: 1000;
  display: none;
  flex-direction: column;
  background-color: dimgray;
  color: #c5c3bc;
  position: absolute;
  top: 5%;
  right: 100%;
  border-color: black;
  border-style: solid;
  /*border-width: 0px;*/
  border-width: 2px;
  /*font-size: 0;*/
  cursor: default;
  border-radius: 3px;
}

#trackerBlock[data-orientation="horizontal"] .chracterStatsPanel {
  right: unset;
  top: 100%;
  left: 0;

}

.charBasicInfo {
  border-bottom: solid black 2px;
  margin-bottom: calc( 3px * min(var(--heightMod, 1), var(--widthMod, 1)) );
}

.chracterStats {
  margin-bottom: calc( 3px * min(var(--heightMod, 1), var(--widthMod, 1)) );
  margin-left: calc( 3px * min(var(--heightMod, 1), var(--widthMod, 1)) );
}

.statsHeader {
  border-bottom: solid #3c3c3c 1px;
  font-size: calc( 20px * min(var(--heightMod, 1), var(--widthMod, 1)) );
  font-weight: 500;
  padding: calc( 2px * min(var(--heightMod, 1), var(--widthMod, 1)) ) calc( 5px * min(var(--heightMod, 1), var(--widthMod, 1)) );
}

.charLevel {
  float: right;
  line-height: calc( 25px * min(var(--heightMod, 1), var(--widthMod, 1)) );
  font-size: calc( 25px * min(var(--heightMod, 1), var(--widthMod, 1)) );
}

.classLevel {
  font-size: calc( 12px * min(var(--heightMod, 1), var(--widthMod, 1)) );
  padding: 0 calc( 5px * min(var(--heightMod, 1), var(--widthMod, 1)) );
}

.separator{
  width: 100%;
  height: 2px;
  margin: 2px 0 2px 0;
  background-color: black;
}

.chracterStatsPanel .separator {
  height: 2px;
  margin: calc( 3px * min(var(--heightMod, 1), var(--widthMod, 1)) ) 0;
}

.initSeparator {
  display: flex; /* to make order property work - it does not work on display block */
  height: 0.2em;
  margin: 0.3em 0;
}

#trackerBlock[data-orientation="horizontal"] .initSeparator{
  width: 0.2em;
  height: 100%;
  margin: 0 0.3em;
}


.EffectsBox:not(:has(*)) + .separator{
  display: none;
}

.EffectsBox:not(:has(*)) {
  display: none !important;
}


.statDiv {
  padding: 2px;
  cursor: default;
  font-weight: bold;
  font-size: calc( 18px * min(var(--heightMod, 1), var(--widthMod, 1)) );
}

.svgShape {
  height: calc( 40px * min(var(--heightMod, 1), var(--widthMod, 1)) );
}

.statsTable {
  table-layout: fixed;
  width: 100%;
}

.statsTable,  
.statsTable th,
.statsTable td {
  border: solid black 1px;
  border-collapse: collapse;
  background-color: #606060
}

.statsTable td,
.statsTable th {
  text-align: center;
}

.statsTable td {
  border-left: solid rgb(82 82 82) 1px;
  font-weight: bold;
  width: 20%;
}
.statsTable th {
  border-right: solid rgb(82 82 82) 1px;
  font-weight: normal;
  width: 30%;
}

.chracterStats {
  align-content: center;
  justify-content: flex-start;
}

.hp-ac .heart {
  --size: calc( 33px * min(var(--heightMod, 1), var(--widthMod, 1)) ) !important;
}

.hp-ac .shield {
  --size: calc( 25px * min(var(--heightMod, 1), var(--widthMod, 1)) ) !important;
}

.EffectsBox{
  display: flex;
  flex-wrap: wrap;
  margin: 0 3px;
  gap: 4px;
}



.effect {
  padding: 1px;
  border-radius: 3px;
  /*font-size: calc( 15px * min(var(--heightMod, 1), var(--widthMod, 1)) );*/
  cursor: default;
  position: relative;
  border: solid black 1px;
}


.tooltip {
  display: none;
  position: absolute;
  width: max-content;
  max-width: calc( 200px * min(var(--heightMod, 1), var(--widthMod, 1)) );
  left: 0;
  z-index: 1001;
  border-color: black;
  border-style: solid;
  border-width: 2px;
  background-color: dimgray;
  box-shadow: 0px 8px 16px 8px rgba(0,0,0,0.2);
  cursor: default;
  color: #e1e1e1;
  opacity: 0.9;
  font-weight: lighter;
  padding-left: 2px;
  white-space: pre-line;
}

*:has(> .tooltip):hover .tooltip{ /* show tooltip when hover over direct parent  */
  display: block;
}


.spellSlotsInfo {
  display: flex;
  justify-content: flex-start;
  flex-flow: wrap;
  column-gap: calc( 8px * min(var(--heightMod, 1), var(--widthMod, 1)) );
  margin-left: calc( 3px * min(var(--heightMod, 1), var(--widthMod, 1)) );
  margin-bottom: calc( 3px * min(var(--heightMod, 1), var(--widthMod, 1)) );
  margin-right: calc( 3px * min(var(--heightMod, 1), var(--widthMod, 1)) );
}

.spellSlotLevel {
  --color: steelblue;
  --fillNum: 0;

  display: flex;
  margin: calc( 3px * min(var(--heightMod, 1), var(--widthMod, 1)) ) 0;
}

.spellSlotLevel > div {
  height: calc( 20px * min(var(--heightMod, 1), var(--widthMod, 1)) );
  border: solid black 1px;
  background-color: #606060;
}

.levelLable{
  width: calc( 15px * min(var(--heightMod, 1), var(--widthMod, 1)) );
  display: flex;
  justify-content: center;
  align-items: center;
}

.slot {
  width: calc( 10px * min(var(--heightMod, 1), var(--widthMod, 1)) );
}

/*
.spellSlotLevel:nth-child(-n+2 of .slot){ /* select the first n slots /
  background-color: var(--color);
}
*/



#fan-art-gallery-popup {
    width: 40em;
    height: 30em;
    background-color: dimgray;
    color: white;
    border: black solid 3px;
    border-radius: 3px;
    position: absolute;
    top: calc(50vh - 15em);
    left: calc(50vw - 20em);
    z-index: 3100;
    display: grid;
    grid-template: 2em 1fr / 1fr 2em;
    grid-template-areas: "Title CloseButton" 
                         "Gallery Gallery";

}

#fan-art-gallery-popup > h4 {
  height: 100%;
  border-bottom: black solid 3px;
  border-right: black solid 3px;
  font-weight: bold;
  font-size: 1.5em;
  padding-left: 0.2em;
}

#galleryCloseButton {
  width: 100%;
  height: 100%;
  background-color: inherit;
  border: none;
  padding: 0;
  display: flex;
  justify-content: center;
  align-items: center;
}

#galleryCloseButton:hover {
  background-color: gray;
}

#galleryCloseButton img {
  width: 90%;
  height: 90%;
}

#galleryCloseButton:hover img {
  width: 103%;
  height: 103%;
}

#fan-art-gallery {
  display: flex;
  align-items: center;
  justify-content: center;
  margin: 1em;
  overflow: hidden;
}

#fan-art-gallery img {
  max-height: 100%;
  max-width: 100%;
}





#resizer {
  position: absolute;
  height: 10px;
  width: 10px;
  bottom: 1px;
  left: 1px;
  cursor: ne-resize;
}




@keyframes spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}
.spinner{
  width: 100px;
  height: 100px;
  position: relative;
}
.spinner:before {
  content: "";
  box-sizing: border-box;
  width: 100%;
  height: 100%;
  position: absolute;
  top: 0;
  left: 0;
  border: solid 6px gray;
  border-radius: 50%;
  border-bottom-color: lightGray;
  animation: 1.5s linear infinite spin;
  animation-play-state: inherit;
  will-change: transform;
}






.heart {
 --size: 33px;
 --color: red;

  position: relative;
  width: var(--size);
  height: calc(var(--size) * 0.9);
}
.heart:before,
.heart:after {
  position: absolute;
  content: "";
  left: calc(var(--size) * 0.5);
  top: 0;
  width: calc(var(--size) * 0.5);
  height: calc(var(--size) * 0.8);
  background: var(--color);
  border-radius: calc(var(--size) * 0.5) calc(var(--size) * 0.5) 0 0;
  transform: translate(0, calc(var(--size) * 0.05)) rotate(-45deg);
  transform-origin: 0 100%;
}
.heart:after {
  left: 0;
  transform: translate(0, calc(var(--size) * 0.05)) rotate(45deg);
  transform-origin: 100% 100%;
}


.shield {
  --size: 25px;
  --color: red;

  width: var(--size);
  height: calc(var(--size) * 1.2);
  position: relative;
}
.shieldCenter{
  width: var(--size);
  height: calc(var(--size) * 0.9);
  background: var(--color);
  position: absolute;
  top: calc(var(--size) * 0.15);
  left: 0;
  border-radius: 0 0 calc(var(--size) * 0.4) calc(var(--size) * 0.4);
  box-sizing: border-box;
}
.shield::before {
  content: "";
  position: absolute;
  top: 0; /*calc(var(--size) * -0.15);*/
  left: 0;
  width: 0;
  height: 0;
  border-left: calc(var(--size) * 0.5) solid transparent;
  border-right: calc(var(--size) * 0.5) solid transparent;
  border-bottom: calc(var(--size) * 0.15) solid var(--color);
  box-sizing: border-box;
}
.shield::after {
  content: "";
  position: absolute;
  bottom: 0; /*calc(var(--size) * -0.15); */
  left: calc(var(--size) * 0.2);
  width: 0;
  height: 0;
  border-left: calc(var(--size) * 0.3) solid transparent;
  border-right: calc(var(--size) * 0.3) solid transparent;
  border-top: calc(var(--size) * 0.2) solid var(--color);

}
